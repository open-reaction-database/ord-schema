# Copyright 2020 Open Reaction Database Project Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Lint

on: [pull_request, push]

jobs:
  check_licenses:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
    - name: Install dependencies
      run: |
        go get -v -u github.com/google/addlicense
        echo "::set-env name=GOBIN::${HOME}/go/bin"
    - name: addlicense
      run: |
        cd "${GITHUB_WORKSPACE}"
        "${GOBIN}/addlicense" -check -c "Open Reaction Database Project Authors" -l apache .

  check_python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: s-weigand/setup-conda@v1
        with:
          python-version: 3.7
      - name: yapf
        run: |
          cd "${GITHUB_WORKSPACE}"
          pip install yapf
          yapf --parallel --recursive --exclude="*_pb2.py" --quiet .
      - name: Install ord-schema
        run: |
          pip install -r requirements.txt
          # Test deps are required to check imports with pylint.
          pip install -r test_requirements.txt
          conda install -c rdkit rdkit
          python setup.py install
      - name: pylint
        run: |
          cd "${GITHUB_WORKSPACE}"
          pip install flask pylint
          pylint editor examples ord_schema *.py

  check_javascript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/setup-node@v1
      - uses: s-weigand/setup-conda@v1
        with:
          python-version: 3.7
      - name: clang-format
        run: |
          cd "${GITHUB_WORKSPACE}"
          sudo apt update && sudo apt install clang-format-10 --yes
          # NOTE(kearnes): Run clang-format before installing anything with npm.
          find . -name '*.js' -exec clang-format-10 -n -Werror --style=file {} +
      - name: Install ord-schema
        run: |
          cd "${GITHUB_WORKSPACE}"
          pip install -r requirements.txt
          conda install -c rdkit rdkit
          python setup.py install
      - name: Build editor
        run: |
          cd "${GITHUB_WORKSPACE}/editor"
          pip install flask pylint yapf
          npm install google-protobuf puppeteer
          wget https://storage.googleapis.com/ord-editor-test/editor_test_protobuf_1dae8fdd.tar
          tar -xzf editor_test_protobuf_1dae8fdd.tar
          wget https://github.com/google/closure-library/archive/v20200517.tar.gz
          tar -xzf v20200517.tar.gz
          git clone https://github.com/Open-Reaction-Database/ketcher.git
          make
      - name: closure-linter
        run: |
          cd "${GITHUB_WORKSPACE}/editor"
          # See https://github.com/google/closure-compiler/wiki/Lint-checks.
          npm install google-closure-compiler
          ../actions/lint_js.sh ord.reaction
          ../actions/lint_js.sh ord.dataset

  check_proto:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: clang-format
        run: |
          cd "${GITHUB_WORKSPACE}"
          sudo apt update && sudo apt install clang-format-10 --yes
          find . -name '*.proto' -exec clang-format-10 -n -Werror --style=file {} +
