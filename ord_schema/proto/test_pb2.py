# Copyright 2022 Open Reaction Database Project Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ord_schema/proto/test.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1bord_schema/proto/test.proto\x12\x08ord_test\"\xaf\x01\n\x06Scalar\x12\x13\n\x0bint32_value\x18\x01 \x01(\x05\x12\x13\n\x0bint64_value\x18\x02 \x01(\x03\x12\x18\n\x0b\x66loat_value\x18\x03 \x01(\x02H\x00\x88\x01\x01\x12\x14\n\x0cstring_value\x18\x04 \x01(\t\x12\x13\n\x0b\x62ytes_value\x18\x05 \x01(\x0c\x12\x17\n\nbool_value\x18\x06 \x01(\x08H\x01\x88\x01\x01\x42\x0e\n\x0c_float_valueB\r\n\x0b_bool_value\" \n\x0eRepeatedScalar\x12\x0e\n\x06values\x18\x01 \x03(\x02\"f\n\x04\x45num\x12(\n\x05value\x18\x01 \x01(\x0e\x32\x19.ord_test.Enum.EnumValues\"4\n\nEnumValues\x12\x0f\n\x0bUNSPECIFIED\x10\x00\x12\t\n\x05\x46IRST\x10\x01\x12\n\n\x06SECOND\x10\x02\"w\n\x0cRepeatedEnum\x12\x31\n\x06values\x18\x01 \x03(\x0e\x32!.ord_test.RepeatedEnum.EnumValues\"4\n\nEnumValues\x12\x0f\n\x0bUNSPECIFIED\x10\x00\x12\t\n\x05\x46IRST\x10\x01\x12\n\n\x06SECOND\x10\x02\"V\n\x06Nested\x12%\n\x05\x63hild\x18\x01 \x01(\x0b\x32\x16.ord_test.Nested.Child\x1a%\n\x05\x43hild\x12\x12\n\x05value\x18\x01 \x01(\x02H\x00\x88\x01\x01\x42\x08\n\x06_value\"i\n\x0eRepeatedNested\x12\x30\n\x08\x63hildren\x18\x01 \x03(\x0b\x32\x1e.ord_test.RepeatedNested.Child\x1a%\n\x05\x43hild\x12\x12\n\x05value\x18\x01 \x01(\x02H\x00\x88\x01\x01\x42\x08\n\x06_value\"_\n\x03Map\x12)\n\x06values\x18\x01 \x03(\x0b\x32\x19.ord_test.Map.ValuesEntry\x1a-\n\x0bValuesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\"\xb3\x01\n\tMapNested\x12\x33\n\x08\x63hildren\x18\x01 \x03(\x0b\x32!.ord_test.MapNested.ChildrenEntry\x1a%\n\x05\x43hild\x12\x12\n\x05value\x18\x01 \x01(\x02H\x00\x88\x01\x01\x42\x08\n\x06_value\x1aJ\n\rChildrenEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12(\n\x05value\x18\x02 \x01(\x0b\x32\x19.ord_test.MapNested.Child:\x02\x38\x01\x62\x06proto3')



_SCALAR = DESCRIPTOR.message_types_by_name['Scalar']
_REPEATEDSCALAR = DESCRIPTOR.message_types_by_name['RepeatedScalar']
_ENUM = DESCRIPTOR.message_types_by_name['Enum']
_REPEATEDENUM = DESCRIPTOR.message_types_by_name['RepeatedEnum']
_NESTED = DESCRIPTOR.message_types_by_name['Nested']
_NESTED_CHILD = _NESTED.nested_types_by_name['Child']
_REPEATEDNESTED = DESCRIPTOR.message_types_by_name['RepeatedNested']
_REPEATEDNESTED_CHILD = _REPEATEDNESTED.nested_types_by_name['Child']
_MAP = DESCRIPTOR.message_types_by_name['Map']
_MAP_VALUESENTRY = _MAP.nested_types_by_name['ValuesEntry']
_MAPNESTED = DESCRIPTOR.message_types_by_name['MapNested']
_MAPNESTED_CHILD = _MAPNESTED.nested_types_by_name['Child']
_MAPNESTED_CHILDRENENTRY = _MAPNESTED.nested_types_by_name['ChildrenEntry']
_ENUM_ENUMVALUES = _ENUM.enum_types_by_name['EnumValues']
_REPEATEDENUM_ENUMVALUES = _REPEATEDENUM.enum_types_by_name['EnumValues']
Scalar = _reflection.GeneratedProtocolMessageType('Scalar', (_message.Message,), {
  'DESCRIPTOR' : _SCALAR,
  '__module__' : 'ord_schema.proto.test_pb2'
  # @@protoc_insertion_point(class_scope:ord_test.Scalar)
  })
_sym_db.RegisterMessage(Scalar)

RepeatedScalar = _reflection.GeneratedProtocolMessageType('RepeatedScalar', (_message.Message,), {
  'DESCRIPTOR' : _REPEATEDSCALAR,
  '__module__' : 'ord_schema.proto.test_pb2'
  # @@protoc_insertion_point(class_scope:ord_test.RepeatedScalar)
  })
_sym_db.RegisterMessage(RepeatedScalar)

Enum = _reflection.GeneratedProtocolMessageType('Enum', (_message.Message,), {
  'DESCRIPTOR' : _ENUM,
  '__module__' : 'ord_schema.proto.test_pb2'
  # @@protoc_insertion_point(class_scope:ord_test.Enum)
  })
_sym_db.RegisterMessage(Enum)

RepeatedEnum = _reflection.GeneratedProtocolMessageType('RepeatedEnum', (_message.Message,), {
  'DESCRIPTOR' : _REPEATEDENUM,
  '__module__' : 'ord_schema.proto.test_pb2'
  # @@protoc_insertion_point(class_scope:ord_test.RepeatedEnum)
  })
_sym_db.RegisterMessage(RepeatedEnum)

Nested = _reflection.GeneratedProtocolMessageType('Nested', (_message.Message,), {

  'Child' : _reflection.GeneratedProtocolMessageType('Child', (_message.Message,), {
    'DESCRIPTOR' : _NESTED_CHILD,
    '__module__' : 'ord_schema.proto.test_pb2'
    # @@protoc_insertion_point(class_scope:ord_test.Nested.Child)
    })
  ,
  'DESCRIPTOR' : _NESTED,
  '__module__' : 'ord_schema.proto.test_pb2'
  # @@protoc_insertion_point(class_scope:ord_test.Nested)
  })
_sym_db.RegisterMessage(Nested)
_sym_db.RegisterMessage(Nested.Child)

RepeatedNested = _reflection.GeneratedProtocolMessageType('RepeatedNested', (_message.Message,), {

  'Child' : _reflection.GeneratedProtocolMessageType('Child', (_message.Message,), {
    'DESCRIPTOR' : _REPEATEDNESTED_CHILD,
    '__module__' : 'ord_schema.proto.test_pb2'
    # @@protoc_insertion_point(class_scope:ord_test.RepeatedNested.Child)
    })
  ,
  'DESCRIPTOR' : _REPEATEDNESTED,
  '__module__' : 'ord_schema.proto.test_pb2'
  # @@protoc_insertion_point(class_scope:ord_test.RepeatedNested)
  })
_sym_db.RegisterMessage(RepeatedNested)
_sym_db.RegisterMessage(RepeatedNested.Child)

Map = _reflection.GeneratedProtocolMessageType('Map', (_message.Message,), {

  'ValuesEntry' : _reflection.GeneratedProtocolMessageType('ValuesEntry', (_message.Message,), {
    'DESCRIPTOR' : _MAP_VALUESENTRY,
    '__module__' : 'ord_schema.proto.test_pb2'
    # @@protoc_insertion_point(class_scope:ord_test.Map.ValuesEntry)
    })
  ,
  'DESCRIPTOR' : _MAP,
  '__module__' : 'ord_schema.proto.test_pb2'
  # @@protoc_insertion_point(class_scope:ord_test.Map)
  })
_sym_db.RegisterMessage(Map)
_sym_db.RegisterMessage(Map.ValuesEntry)

MapNested = _reflection.GeneratedProtocolMessageType('MapNested', (_message.Message,), {

  'Child' : _reflection.GeneratedProtocolMessageType('Child', (_message.Message,), {
    'DESCRIPTOR' : _MAPNESTED_CHILD,
    '__module__' : 'ord_schema.proto.test_pb2'
    # @@protoc_insertion_point(class_scope:ord_test.MapNested.Child)
    })
  ,

  'ChildrenEntry' : _reflection.GeneratedProtocolMessageType('ChildrenEntry', (_message.Message,), {
    'DESCRIPTOR' : _MAPNESTED_CHILDRENENTRY,
    '__module__' : 'ord_schema.proto.test_pb2'
    # @@protoc_insertion_point(class_scope:ord_test.MapNested.ChildrenEntry)
    })
  ,
  'DESCRIPTOR' : _MAPNESTED,
  '__module__' : 'ord_schema.proto.test_pb2'
  # @@protoc_insertion_point(class_scope:ord_test.MapNested)
  })
_sym_db.RegisterMessage(MapNested)
_sym_db.RegisterMessage(MapNested.Child)
_sym_db.RegisterMessage(MapNested.ChildrenEntry)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _MAP_VALUESENTRY._options = None
  _MAP_VALUESENTRY._serialized_options = b'8\001'
  _MAPNESTED_CHILDRENENTRY._options = None
  _MAPNESTED_CHILDRENENTRY._serialized_options = b'8\001'
  _SCALAR._serialized_start=42
  _SCALAR._serialized_end=217
  _REPEATEDSCALAR._serialized_start=219
  _REPEATEDSCALAR._serialized_end=251
  _ENUM._serialized_start=253
  _ENUM._serialized_end=355
  _ENUM_ENUMVALUES._serialized_start=303
  _ENUM_ENUMVALUES._serialized_end=355
  _REPEATEDENUM._serialized_start=357
  _REPEATEDENUM._serialized_end=476
  _REPEATEDENUM_ENUMVALUES._serialized_start=303
  _REPEATEDENUM_ENUMVALUES._serialized_end=355
  _NESTED._serialized_start=478
  _NESTED._serialized_end=564
  _NESTED_CHILD._serialized_start=527
  _NESTED_CHILD._serialized_end=564
  _REPEATEDNESTED._serialized_start=566
  _REPEATEDNESTED._serialized_end=671
  _REPEATEDNESTED_CHILD._serialized_start=527
  _REPEATEDNESTED_CHILD._serialized_end=564
  _MAP._serialized_start=673
  _MAP._serialized_end=768
  _MAP_VALUESENTRY._serialized_start=723
  _MAP_VALUESENTRY._serialized_end=768
  _MAPNESTED._serialized_start=771
  _MAPNESTED._serialized_end=950
  _MAPNESTED_CHILD._serialized_start=527
  _MAPNESTED_CHILD._serialized_end=564
  _MAPNESTED_CHILDRENENTRY._serialized_start=876
  _MAPNESTED_CHILDRENENTRY._serialized_end=950
# @@protoc_insertion_point(module_scope)
